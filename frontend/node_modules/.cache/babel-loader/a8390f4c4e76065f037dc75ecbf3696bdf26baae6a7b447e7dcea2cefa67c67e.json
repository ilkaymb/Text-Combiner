{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\yazlab2-1\\\\src\\\\MetinBox.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MetinBox(_ref) {\n  let {\n    handleChange,\n    name,\n    setState,\n    state\n  } = _ref;\n  const deleteText = id => {\n    setState(Object.keys(state).map().filter((item, key) => key !== Object.keys(state).length - 1));\n  };\n  console.log(Object.values(state).filter((item, key) => item[key] !== item[Object.keys(state).length - 1]));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"col-sm-12 col-md-6 col-lg-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: `exampleFormControlTextarea${name + 1}`,\n          style: {\n            fontSize: '18px'\n          },\n          children: [name + 1, \". Metin\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          class: \"form-control\",\n          name: name,\n          onChange: e => handleChange(e),\n          style: {\n            width: '100%',\n            height: '250px',\n            backgroundColor: 'transparent',\n            color: 'white',\n            borderRadius: 0\n          },\n          id: `exampleFormControlTextarea${name + 1}`,\n          rows: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"btn\",\n      onClick: e => deleteText(name),\n      role: \"button\",\n      \"aria-disabled\": \"true\",\n      style: {\n        backgroundColor: '#FF0303',\n        color: 'white',\n        borderRadius: 6,\n        width: '100%'\n      },\n      children: \"Metin Sil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = MetinBox;\nexport default MetinBox;\nvar _c;\n$RefreshReg$(_c, \"MetinBox\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MetinBox","_ref","handleChange","name","setState","state","deleteText","id","Object","keys","map","filter","item","key","length","console","log","values","class","children","for","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","width","height","backgroundColor","color","borderRadius","rows","onClick","role","_c","$RefreshReg$"],"sources":["C:/Desktop/yazlab2-1/src/MetinBox.js"],"sourcesContent":["import React from 'react';\r\nimport { useState ,useEffect} from 'react';\r\n\r\n\r\n\r\nfunction MetinBox({handleChange,name,setState,state}) {\r\n\r\nconst deleteText = id => {\r\n   setState(Object.keys(state).map().filter((item,key)=>key !==Object.keys(state).length-1)) \r\n\r\n  }\r\nconsole.log(Object.values(state).filter((item,key)=>item[key] !== item[Object.keys(state).length-1]))\r\n\r\nreturn (    \r\n    <div class=\"col-sm-12 col-md-6 col-lg-12\">\r\n    <form>\r\n<div class=\"form-group\" >\r\n<label for={`exampleFormControlTextarea${(name+1)}`} style={{fontSize:'18px'}}>{name+1}. Metin</label>\r\n<textarea class=\"form-control\" name={name}  onChange={(e) => handleChange(e)} style={{width:'100%',height:'250px',backgroundColor:'transparent',color:'white',borderRadius:0}} id={`exampleFormControlTextarea${(name+1)}`} rows=\"3\"></textarea>\r\n</div>\r\n</form>\r\n<div class=\"btn\" onClick={e => deleteText(name)}  role=\"button\" aria-disabled=\"true\"  style={{backgroundColor:'#FF0303',color:'white',borderRadius:6,width:'100%'}}>Metin Sil</div>\r\n\r\n    </div>\r\n\r\n);\r\n}\r\nexport default MetinBox;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI3C,SAASC,QAAQA,CAAAC,IAAA,EAAqC;EAAA,IAApC;IAACC,YAAY;IAACC,IAAI;IAACC,QAAQ;IAACC;EAAK,CAAC,GAAAJ,IAAA;EAEpD,MAAMK,UAAU,GAAGC,EAAE,IAAI;IACtBH,QAAQ,CAACI,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,GAAG,EAAE,CAACC,MAAM,CAAC,CAACC,IAAI,EAACC,GAAG,KAAGA,GAAG,KAAIL,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACS,MAAM,GAAC,CAAC,CAAC,CAAC;EAE1F,CAAC;EACHC,OAAO,CAACC,GAAG,CAACR,MAAM,CAACS,MAAM,CAACZ,KAAK,CAAC,CAACM,MAAM,CAAC,CAACC,IAAI,EAACC,GAAG,KAAGD,IAAI,CAACC,GAAG,CAAC,KAAKD,IAAI,CAACJ,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACS,MAAM,GAAC,CAAC,CAAC,CAAC,CAAC;EAErG,oBACIf,OAAA;IAAKmB,KAAK,EAAC,8BAA8B;IAAAC,QAAA,gBACzCpB,OAAA;MAAAoB,QAAA,eACJpB,OAAA;QAAKmB,KAAK,EAAC,YAAY;QAAAC,QAAA,gBACvBpB,OAAA;UAAOqB,GAAG,EAAG,6BAA6BjB,IAAI,GAAC,CAAG,EAAE;UAACkB,KAAK,EAAE;YAACC,QAAQ,EAAC;UAAM,CAAE;UAAAH,QAAA,GAAEhB,IAAI,GAAC,CAAC,EAAC,SAAO;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACtG3B,OAAA;UAAUmB,KAAK,EAAC,cAAc;UAACf,IAAI,EAAEA,IAAK;UAAEwB,QAAQ,EAAGC,CAAC,IAAK1B,YAAY,CAAC0B,CAAC,CAAE;UAACP,KAAK,EAAE;YAACQ,KAAK,EAAC,MAAM;YAACC,MAAM,EAAC,OAAO;YAACC,eAAe,EAAC,aAAa;YAACC,KAAK,EAAC,OAAO;YAACC,YAAY,EAAC;UAAC,CAAE;UAAC1B,EAAE,EAAG,6BAA6BJ,IAAI,GAAC,CAAG,EAAE;UAAC+B,IAAI,EAAC;QAAG;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAY;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC1O;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACP3B,OAAA;MAAKmB,KAAK,EAAC,KAAK;MAACiB,OAAO,EAAEP,CAAC,IAAItB,UAAU,CAACH,IAAI,CAAE;MAAEiC,IAAI,EAAC,QAAQ;MAAC,iBAAc,MAAM;MAAEf,KAAK,EAAE;QAACU,eAAe,EAAC,SAAS;QAACC,KAAK,EAAC,OAAO;QAACC,YAAY,EAAC,CAAC;QAACJ,KAAK,EAAC;MAAM,CAAE;MAAAV,QAAA,EAAC;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEzK;AAGV;AAACW,EAAA,GArBQrC,QAAQ;AAsBjB,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}